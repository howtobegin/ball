<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ball.biz.user.mapper.ext.UserExtMapper">
    <select id="proxyUser" resultType="com.ball.biz.user.bo.ProxyUserInfo">
        select proxy_user_id as proxyUid, count(1) as userCount
        from user_info
        where proxy_user_id in
        <foreach collection="proxyUids" separator="," close=")" open="(" item="proxyUid">
            #{proxyUid}
        </foreach>
        and user_type = 1
        group by proxy_user_id
    </select>

    <select id="selectProxyStatistics" resultType="com.ball.biz.user.bo.ProxyStatistics">
        select status, count(1) as userCount
        from user_info where proxy_user_id = #{proxyUid}
        group by status
    </select>

    <select id="selectProxyStatisticsPeriod" resultType="java.lang.Integer">
        select count(1) from user_info
        where proxy_info like #{proxyUid}
        and user_type = 1
        <if test="start != null">
            and create_time &gt;= #{start}
        </if>
        <if test="end != null">
            and create_time &lt;= #{end}
        </if>
    </select>

    <select id="selectProxyStatisticsPeriodThree" resultType="java.lang.Integer">
        select count(1) from user_info
        where proxy_user_id = #{proxyUid}
        <if test="start != null">
            and create_time &gt;= #{start}
        </if>
        <if test="end != null">
            and create_time &lt;= #{end}
        </if>
    </select>


    <select id="selectProxyChildrenBalance" resultType="com.ball.biz.user.bo.ProxyChildrenBalance">
        select t1.status, sum(t2.allowance) as allowance, sum(t2.balance) as balance,
        sum(t2.freeze_amount) as freeze
        from user_info t1 join user_account t2
        on (t1.id = t2.user_id and t1.proxy_user_id = #{proxyUid})
        group by t1.status

    </select>

    <select id="selectStatusByType" resultType="com.ball.biz.user.bo.UserStatusBO">
        select ifnull(sum(case status when 1 then 1 else 0 end), 0) as normalCount,
               ifnull(sum(case status when 0 then 1 else 0 end), 0) as lockCount
        from user_info
        where user_type = #{userType}
        and  proxy_info like #{proxyInfo}
    </select>
</mapper>
